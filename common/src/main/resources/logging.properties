# The set of handlers to be loaded upon startup.
# Comma-separated list of class names.
# (? LogManager docs say no comma here, but JDK example has comma.)
handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# Loggers and Handlers may override this level
.level = INFO

# Loggers
# ------------------------------------------
# Loggers are usually attached to packages.
# Here, the level for each package is specified.
# The global level is used by default, so levels
# specified here simply act as an override.
de.ecsec.core.ifd.level = FINER
de.ecsec.core.ifd.scio.level = FINER
de.ecsec.core.ifd.virt.level = FINER

# Handlers
# -----------------------------------------

# --- ConsoleHandler ---
# Override of global logging level
java.util.logging.ConsoleHandler.level = WARNING

# Style of output:
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# --- FileHandler ---
# Override of global logging level
java.util.logging.FileHandler.level = FINER

# Naming style for the output file:
# A pattern consists of a string that includes the following
# special components that will be replaced at runtime:
#
#   "/"   the local pathname separator
#   "%t"  the system temporary directory
#   "%h"  the value of the "user.home" system property
#   "%g"  the generation number to distinguish rotated logs
#   "%u"  a unique number to resolve conflicts
#   "%%"  translates to a single percent sign "%"
#
# If no "%g" field has been specified and the file count is
# greater than one, then the generation number will be added
# to the end of the generated filename, after a dot. 
java.util.logging.FileHandler.pattern = %h/.ecsec/log%u.xml

# Limiting size of output file in bytes:
#java.util.logging.FileHandler.limit=50000

# Number of output files to cycle through, by appending an
# integer to the base file name:
java.util.logging.FileHandler.count = 1

# Append log entries onto any existing files
java.util.logging.FileHandler.append = false

# Style of output:
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
